Comment: Get labels from an image file
StartAt: GetUploadImage
States:
  GetUploadImage:
    Type: Task
    Parameters:
      Bucket.$: $.detail.bucket.name
      Key.$: $.detail.object.key
    Resource: arn:aws:states:::aws-sdk:s3:getObject
    Next: DetectLabels
  DetectLabels:
    Type: Task
    Parameters:
      Features:
        - GENERAL_LABELS
      Image:
        S3Object:
          Bucket.$: $.detail.bucket.name
          Name.$: $.detail.object.key #dfdf
      MaxLabels: 3
      MinConfidence: 80
    Resource: arn:aws:states:::aws-sdk:rekognition:detectLabels
    Next: Store Labels In S3
  Store Labels In S3:
    Type: Task
    Parameters:
      Bucket: ${ImageLabelBucket}
      Key.$: States.Format('labels/{}', $.detail.object.key)
      Body.$: $.result.ImageLabels
    Resource: arn:aws:states:::aws-sdk:s3:putObject
    Next: FormatUri
  FormatUri:
    Type: Pass
    Next: GetSignedUri
    InputPath: $
    Parameters:
      uri.$: States.Format('https://s3.{}.amazonaws.com/${ImageLabelBucket}/{}',
        $.region, States.ArrayGetItem(States.StringSplit)($.detail.object.key,
        '/')
  GetSignedUri:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    OutputPath: $.Payload
    Parameters:
      FunctionName: ${GetSignedUri}
      Payload.$: $
    Retry:
      - ErrorEquals:
          - Lambda.ServiceException
          - Lambda.AWSLambdaException
          - Lambda.SdkClientException
          - Lambda.TooManyRequestsException
        IntervalSeconds: 1
        MaxAttempts: 3
        BackoffRate: 2
        JitterStrategy: FULL
    Next: SendNotification
  SendNotification:
    Type: Task
    Resource: arn:aws:states:::sns:publish
    Parameters:
      Message.$: States.JsonToString($)
      TopicArn: ${NotificationTopic}
    End: true
