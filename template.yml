Transform: AWS::Serverless-2016-10-31

Parameters:
  AmhBucketName:
    Type: String
    Description: The S3 bucket where AMH files will be stored.
    Default: amh-bucket2
  ImageLabelBucketName:
    Type: String
    Description: The S3 bucket where the image labels will be stored.
    Default: amh-label-bucket

Resources:
  LambdaGetLabelObjectRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${ImageLabelBucketName}/*

  GetSignedUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetSignedUrlFunction
      Handler: index.handler
      Runtime: nodejs20.x
      CodeUri: src/
      Timeout: 10
      Environment:
        Variables:
          BUCKET_NAME: !Ref ImageLabelBucketName
      Role: !GetAtt LambdaGetLabelObjectRole.Arn

  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: DetectLabelTopic

  ImageReaderStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Logging:
        Level: ALL
        IncludeExecutionData: true
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt ImageReaderStateMachineLogGroup.Arn
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref ImageLabelBucketName
        - S3WritePolicy:
            BucketName: !Ref ImageLabelBucketName
        - S3ReadPolicy:
            BucketName: !Ref AmhBucketName
        - Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref NotificationTopic
        - Statement:
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: !GetAtt GetSignedUrlFunction.Arn

        - AWSXrayWriteOnlyAccess
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogDelivery
                - logs:GetLogDelivery
                - logs:UpdateLogDelivery
                - logs:DeleteLogDelivery
                - logs:ListLogDeliveries
                - logs:PutResourcePolicy
                - logs:DescribeResourcePolicies
                - logs:DescribeLogGroups
              Resource: '*'
            - Sid: JobPolicy
              Effect: Allow
              Action:
                - rekognition:DetectLabels
                - rekognition:StartLabelDetection
                - rekognition:StopLabelDetection
              Resource: '*'

      Tracing:
        Enabled: true
      Type: STANDARD
      DefinitionSubstitutions:
        ImageLabelBucket: !Ref ImageLabelBucketName
        GetSignedUri: !GetAtt GetSignedUrlFunction.Arn
        NotificationTopic: !Ref NotificationTopic
      Events:
        S3MediaTrigger:
          Type: EventBridgeRule
          Properties:
            EventBusName: default
            Pattern:
              source:
                - aws.s3
              detail-type:
                - Object Created
              detail:
                bucket:
                  name:
                    - !Ref AmhBucketName
                object:
                  key:
                    - prefix: productImage/
      DefinitionUri: stateMachine.asl.yaml

  ImageReaderStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-ImageReaderStateMachine-Logs